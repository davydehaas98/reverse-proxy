worker_processes                auto;
worker_rlimit_core              500M;

events {
    accept_mutex                off;
    worker_connections          1024;
    multi_accept                on;
    use                         epoll;
}

http {
    include                     security.conf;
    include                     compression.conf;
    
    # --- Buffer Overflow Prevention
    client_body_buffer_size     10k;
    client_header_buffer_size   1k;
    client_max_body_size        8m;
    large_client_header_buffers 4 32k;

    access_log                  off;
    error_log                   /etc/nginx/error_log.log warn;
    proxy_cache_path            /etc/nginx/cache keys_zone=one:500m max_size=1000m;

    # --- Performance Boosting
    # Copies data between file directories from within the kernel (Faster than read() + write())
    sendfile                    on;
    # Send headers in one piece rather than one by one
    tcp_nopush                  on;
    # No buffering data
    tcp_nodelay                 on;

    # --- DDOS Protection
    limit_req_zone              $binary_remote_addr zone=req_limit_per_ip:10m rate=2r/s;
    limit_conn_zone             $binary_remote_addr zone=conn_limit_per_ip:10m;

    # --- Timeout
    reset_timedout_connection   on;
    client_body_timeout         10; # default 60
    send_timeout                5; # default 60
    keepalive_timeout           30; # default 75  
    
    # Auto redirect HTTP requests to HTTPS
    server {
        listen                  80 default_server;
        listen                  [::]:80 default_server;
        server_name             _;
        return 301              https://$host$request_uri;
    }
    
    server {
        # Listen only to https port
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        
        # The server name that will be redirected
        server_name             davydehaas.nl;

        location / {
            # Pass the request to a specific ip and port
            proxy_pass          http://127.0.0.1:3000;
            proxy_redirect      http://127.0.0.1:3000 https://davydehaas.nl;
            include             proxy-settings.conf;
        }
    }
    
    # Jenkins
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             jenkins.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:4000;
            proxy_redirect      http://127.0.0.1:4000 https://jenkins.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }

    # Sonarqube
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             sonarqube.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:9000;
            proxy_redirect      http://127.0.0.1:9000 https://sonarqube.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }
    
    # Plex
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             plex.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6002;
            proxy_redirect      http://127.0.0.1:6002 https://plex.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }
    
    # Tautulli
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             tautulli.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6003;
            proxy_redirect      http://127.0.0.1:6003 https://tautulli.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }

    # Radarr
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             movies.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6004;
            proxy_redirect      http://127.0.0.1:6004 https://movies.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }

    # Sonarr
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             tv.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6005;
            proxy_redirect      http://127.0.0.1:6005 https://tv.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }
    
    # Jackett
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             jackett.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6006;
            proxy_redirect      off;
            include             proxy-settings.conf;
        }
    }
    
    # Torrent
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             torrent.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6007;
            proxy_redirect      http://127.0.0.1:6007 https://torrent.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }
    
    # Portainer
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             portainer.davydehaas.nl;

        location / {
            proxy_pass          http://127.0.0.1:6009;
            proxy_redirect      http://127.0.0.1:6009 https://portainer.davydehaas.nl;
            include             proxy-settings.conf;
        }
    }
}
