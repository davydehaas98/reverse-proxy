name: main
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false
env:
  UID: 1400
  GID: 1400
  TZ: Etc/UTC
  TARGET_DIR: /home/homelab/compose/reverse-proxy
  USER_DIR: /home/homelab/reverse-proxy
  DOMAIN_NAME: davydehaas.nl
jobs:
   deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: SSH SCP | Copy docker-compose.yaml
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 700 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
            scp -o StrictHostKeyChecking=no -r docker-compose.yaml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/homelab/compose/reverse-proxy/
      - name: SSH SCP | Copy /traefik directory
        uses: appleboy/scp-action@917f8b81dfc1ccd331fef9e2d61bdc6c8be94634 # v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: traefik/
          target: ${{ env.USER_DIR }}/traefik/config
          rm: true
          # strip /traefik
          strip_components: 1
      - name: SSH | Start containers
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.TARGET_DIR }}
            
            echo 'UID=${{ env.UID }}' >> .env
            echo 'GID=${{ env.GID }}' >> .env
            echo 'TZ=${{ env.TZ }}' >> .env
            echo 'USER_DIR=${{ env.USER_DIR }}' >> .env
            echo 'DOMAIN_NAME=${{ env.DOMAIN_NAME }}' >> .env
            
            echo 'CLOUDFLARE_EMAIL=${{ secrets.CLOUDFLARE_EMAIL }}' >> .env
            echo 'CLOUDFLARE_API_KEY=${{ secrets.CLOUDFLARE_API_KEY }}' >> .env
            echo 'CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}' >> .env
            echo 'CLOUDFLARE_ZONE_ID=${{ secrets.CLOUDFLARE_ZONE_ID }}' >> .env

            echo 'OAUTH_SECRET=${{ secrets.OAUTH_SECRET }}' >> .env
            echo 'GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}' >> .env
            echo 'GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}' >> .env

            docker compose up -d
