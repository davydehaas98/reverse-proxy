name: Traefik reverse proxy
on:
  push:
    branches:
    - main
    
# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false
  
env:
  TARGET_DIR: /opt/compose/reverse-proxy
  PGID: 1000
  PUID: 1000
  TZ: Etc/UTC
  USER_DIR: /opt/appdata/reverse-proxy
  DOMAIN_NAME: davydehaas.nl

jobs:
   deploy:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3.1.0
    - name: SSH SCP | Copy docker-compose.yml
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        #password: ${{ secrets.SSH_PASSWORD }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: docker-compose.yml
        target: ${{ env.TARGET_DIR }}
        rm: true
    - name: SSH SCP | Copy /config
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        #password: ${{ secrets.SSH_PASSWORD }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: config/
        target: ${{ env.USER_DIR }}/config
        strip_components: 1 # strip /config
        rm: true
    - name: SSH | Start container
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        #password: ${{ secrets.SSH_PASSWORD }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |          
          cd ${{ env.TARGET_DIR }}
          
          echo 'PGID=${{ env.PGID }}' >> .env
          echo 'PUID=${{ env.PUID }}' >> .env
          echo 'TZ=${{ env.TZ }}' >> .env
          echo 'USER_DIR=${{ env.USER_DIR }}' >> .env
          echo 'DOMAIN_NAME=${{ env.DOMAIN_NAME }}' >> .env
          
          echo 'CLOUDFLARE_EMAIL=${{ secrets.CLOUDFLARE_EMAIL }}' >> .env
          echo 'CLOUDFLARE_API_KEY=${{ secrets.CLOUDFLARE_API_KEY }}' >> .env
          echo 'CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}' >> .env
          echo 'CLOUDFLARE_ZONE_ID=${{ secrets.CLOUDFLARE_ZONE_ID }}' >> .env

          echo 'OAUTH_SECRET=${{ secrets.OAUTH_SECRET }}' >> .env
          echo 'GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}' >> .env
          echo 'GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}' >> .env

          docker compose up -d
