worker_processes              auto; # default 1
worker_rlimit_core            500M; # default -

events {
  accept_mutex                off; # default off
  worker_connections          1024; # default 512
  multi_accept                on; # default off
  use                         epoll; # Efficient method used on Linux 2.6+, default -
}

http {
  include                     compression.conf;
  include                     security.conf;

  ### Buffer Overflow Prevention ###
  client_body_buffer_size     8k; # default 8k | 16k
  client_header_buffer_size   1k; # default 1k
  client_max_body_size        8m; # default 1m
  large_client_header_buffers 4 16k; # default 4 8k

  access_log                  off; # default logs/access.log combined
  error_log                   /etc/nginx/error.log error; # logs/error.log error
  proxy_cache_path            /etc/nginx/cache keys_zone=one:500m max_size=1000m; # default -

  ### Performance Boosting ###
  # Copies data between file directories from within the kernel (Faster than read() + write())
  sendfile                    on;

  # Send headers in one piece rather than one by one
  tcp_nopush                  on; # default off

  # No buffering data
  tcp_nodelay                 on; # default on

  ### DDOS Protection ###
  limit_req_zone              $binary_remote_addr zone=req_limit_per_ip:10m rate=2r/s; # -
  limit_conn_zone             $binary_remote_addr zone=conn_limit_per_ip:10m; # -

  ### Timeout ###
  reset_timedout_connection   on; # default off
  client_body_timeout         10s; # default 60s
  send_timeout                5s; # default 60s
  keepalive_timeout           30s; # default 75s

  # Auto redirect HTTP requests to HTTPS
  server {
    listen                80 default_server;
    listen                [::]:80 default_server;
    
    server_name           _;
    
    return 301            https://$host$request_uri;
  }

  # Default Website
  server {
    # Listen only to https port
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;

    # The server name that will be redirected
    server_name           davydehaas.nl;

    location / {
      # Pass the request to a specific ip and port
      proxy_pass          http://127.0.0.1:3000;
      proxy_redirect      http://127.0.0.1:3000 https://davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Jenkins
  upstream jenkins {
    server                http://127.0.0.1:4000
  }
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           jenkins.davydehaas.nl;

    location / {
      proxy_pass          http://jenkins;
      proxy_redirect      http://jenkins https://jenkins.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Docker Registry
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           docker.davydehaas.nl;

    location / {
      proxy_pass          http://127.0.0.1:5000;
      proxy_redirect      http://127.0.0.1:5000 https://docker.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Sonarqube
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           sonarqube.davydehaas.nl;

    location / {
      proxy_pass          http://127.0.0.1:9091;
      proxy_redirect      http://127.0.0.1:9091 https://sonarqube.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Portainer
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           portainer.davydehaas.nl;

    location / {
      proxy_pass          http://127.0.0.1:9001;
      proxy_redirect      http://127.0.0.1:9001 https://portainer.davydehaas.nl;
      include             proxy.conf;
      include             websockets.conf;
    }
  }

  # Plex
  upstream plex {
    server                plex:32400;
  }
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           plex.davydehaas.nl;

    location / {
      proxy_pass          http://plex;
      #proxy_redirect      http://plex https://plex.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Tautulli
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           tautulli.davydehaas.nl;

    location / {
      proxy_pass          http://tautulli:8181;
      proxy_redirect      http://tautulli:8181 https://tautulli.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Bazarr
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           subtitles.davydehaas.nl;

    location / {
      proxy_pass          http://bazarr:6767;
      proxy_redirect      http://bazarr:6767 https://subtitles.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Radarr
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           movies.davydehaas.nl;

    location / {
      proxy_pass          http://radarr:7878;
      proxy_redirect      http://radarr:7878 https://movies.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Sonarr
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           tv.davydehaas.nl;

    location / {
      proxy_pass          http://sonarr:8989;
      proxy_redirect      http://sonarr:8989 https://tv.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Jackett
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           jackett.davydehaas.nl;

    location / {
      proxy_pass          http://jackett:9117;
      proxy_redirect      http://jackett:9117 https://jackett.davydehaas.nl;
      include             proxy.conf;
    }
  }

  # Torrent (Transmission)
  server {
    listen                443 ssl http2;
    listen                [::]:443 ssl http2;
    server_name           torrent.davydehaas.nl;

    location / {
      proxy_pass          http://transmission:9091;
      proxy_redirect      http://transmission:9091 https://torrent.davydehaas.nl;
      include             proxy.conf;
    }
  }
}
